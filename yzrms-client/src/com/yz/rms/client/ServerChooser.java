/*
 * Launcher.java
 * 
 * Copyright(c) 2007-2015 by Yingzhi Tech
 * All Rights Reserved
 * 
 * Created at 2015-07-01 14:35:20
 */
package com.yz.rms.client;

import com.nazca.ui.NLabelMessageTool;
import com.nazca.ui.UIUtilities;
import com.nazca.ui.laf.NazcaLAFTool;
import com.nazca.usm.client.ConfigManager;
import com.nazca.usm.client.ServiceConfig;
import com.nazca.usm.client.UsmsClientContext;
import com.nazca.usm.model.USMSUser;
import com.nazca.util.PropertyTool;
import com.yz.rms.client.agent.LoginAgent;
import com.yz.rms.client.listener.AgentListener;
import com.yz.rms.client.util.FakeDataFactory;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Properties;
import javax.swing.SwingUtilities;

/**
 *
 * @author Wu Jinghua <wjh@yzhtech.com>
 */
public class ServerChooser extends javax.swing.JFrame implements AgentListener<USMSUser> {

    public static final String PROPERTIES_USER_NAME = "USER_NAME";
    public static final String PROPERTIES_USER_PWD = "USER_PWD";
    private String userName = "";
    private String password = "";
    Properties prop = new Properties();
    private LoginAgent agent = null;

    /**
     * Creates new form ServerChooser
     */
    public ServerChooser() {
        initComponents();
        this.setTitle("选择服务器并登录");
        
        usmsCmb.addItem("http://172.16.100.83:8090/usms-web/rpc");
        usmsCmb.addItem("http://172.16.100.34:8090/usms-web/rpc");
        sysCmb.addItem("http://localhost:8080/yzrms-server/rpc");
        sysCmb.addItem("http://172.16.100.42:8080/yzrms-server/rpc");

        testCb.setSelected(false);

        userNameTxFd.setText("");
        passwordTxFd.setText("");

        rememberUserNameCb.setSelected(false);
        rememberPwdCb.setSelected(false);
        loadConfig();
        if (userName != null && !"".equals(userName)) {
            userNameTxFd.setText(userName);
            rememberUserNameCb.setSelected(true);
        }
        if (userName != null && !"".equals(password)) {
            passwordTxFd.setText(password);
            rememberPwdCb.setSelected(true);
        }
        this.getRootPane().setDefaultButton(startBtn);

        jProgressBar1.setVisible(false);
        jProgressBar1.setIndeterminate(false);
        msgLb.setText("");

        this.agent = new LoginAgent();
        this.agent.addListener(this);
    }

    private void loadConfig() {
        try {
            prop = PropertyTool.loadProperty(new File(System.getProperty("user.home")
                    + File.separator + ".yzrms"), "client", "sys_config.cfg");
            if (prop != null) {
                userName = prop.getProperty(PROPERTIES_USER_NAME);
                password = prop.getProperty(PROPERTIES_USER_PWD);
            }
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    private void saveConfig() {
        Properties props = new Properties();

        if (this.rememberUserNameCb.isSelected()) {
            props.put(PROPERTIES_USER_NAME, userName);
        } else {
            props.put(PROPERTIES_USER_NAME, "");
        }
        if (this.rememberPwdCb.isSelected()) {
            props.put(PROPERTIES_USER_PWD, password);
        } else {
            props.put(PROPERTIES_USER_PWD, "");
        }

        try {
            PropertyTool.saveProperty(props, new File(System.getProperty("user.home")
                    + File.separator + ".yzrms"), "client", "sys_config.cfg");
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    private void launchMainFrame() {
        ClientMainFrame frame = new ClientMainFrame();
        int h = 720;
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int sW = dim.width;
        int sH = dim.height;
        if (h > sH - 45) {
            h = sH - 45;
        }
        int w = (int) (h * 1.6);
        if (w > sW) {
            w = sW - 20;
        }
        frame.setSize(w, h);
        UIUtilities.centerFrame(frame);
        frame.setVisible(true);
        this.dispose();
    }

    private void setCompEnable(boolean flag) {
        usmsCmb.setEnabled(flag);
        sysCmb.setEnabled(flag);
        testCb.setEnabled(flag);
        userNameTxFd.setEnabled(flag);
        passwordTxFd.setEnabled(flag);
        rememberUserNameCb.setEnabled(flag);
        rememberPwdCb.setEnabled(flag);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        testCb = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sysCmb = new javax.swing.JComboBox();
        startBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        usmsCmb = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        userNameTxFd = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        passwordTxFd = new javax.swing.JPasswordField();
        rememberUserNameCb = new javax.swing.JCheckBox();
        rememberPwdCb = new javax.swing.JCheckBox();
        jProgressBar1 = new javax.swing.JProgressBar();
        msgLb = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        testCb.setText("启用测试数据");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("测试数据开关：");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("系统服务器：");

        sysCmb.setEditable(true);

        startBtn.setText("启动客户端");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("登录服务器：");

        usmsCmb.setEditable(true);

        jLabel5.setText("用户名：");

        userNameTxFd.setText("sys");

        jLabel6.setText("密码：");

        passwordTxFd.setText("jPasswordField1");

        rememberUserNameCb.setText("记住用户名");

        rememberPwdCb.setText("记住密码");

        jProgressBar1.setPreferredSize(new java.awt.Dimension(146, 10));

        msgLb.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usmsCmb, 0, 355, Short.MAX_VALUE)
                            .addComponent(sysCmb, 0, 355, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(testCb)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(userNameTxFd, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                            .addComponent(passwordTxFd, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rememberUserNameCb)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rememberPwdCb))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(msgLb)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(startBtn)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usmsCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(sysCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(testCb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(userNameTxFd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(passwordTxFd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rememberPwdCb)
                    .addComponent(rememberUserNameCb))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(msgLb)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        startBtn.setEnabled(false);
	String curUsmsServer = usmsCmb.getSelectedItem().toString();
        String curSysServer = sysCmb.getSelectedItem().toString();
        ClientConfig.setUsmsServerRpcURL(curUsmsServer);
        ClientConfig.setSysServerRpcURL(curSysServer);
        FakeDataFactory.setFake(testCb.isSelected());
        //登录
        userName = userNameTxFd.getText();
        password = new String(passwordTxFd.getPassword());
        agent.setLoginName(userName);
        agent.setPassword(password);
        agent.start();
    }//GEN-LAST:event_startBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                NazcaLAFTool.applyNazcaLAF();
                ServerChooser sc = new ServerChooser();
                sc.setVisible(true);
                sc.setLocationRelativeTo(null);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel msgLb;
    private javax.swing.JPasswordField passwordTxFd;
    private javax.swing.JCheckBox rememberPwdCb;
    private javax.swing.JCheckBox rememberUserNameCb;
    private javax.swing.JButton startBtn;
    private javax.swing.JComboBox sysCmb;
    private javax.swing.JCheckBox testCb;
    private javax.swing.JTextField userNameTxFd;
    private javax.swing.JComboBox usmsCmb;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onStarted(long seq) {
        jProgressBar1.setIndeterminate(true);
        this.jProgressBar1.setVisible(true);
        setCompEnable(false);
        NLabelMessageTool.infoMessage(msgLb, "登录中...");
    }

    @Override
    public void onSucceeded(USMSUser result, long seq) {
        saveConfig();
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jProgressBar1.setVisible(false);
                jProgressBar1.setIndeterminate(false);
                NLabelMessageTool.goodNewsMessage(msgLb, "登录成功");
                launchMainFrame();
            }
        });
    }

    @Override
    public void onFailed(String errMsg, int errCode, long seq) {
        jProgressBar1.setVisible(false);
        jProgressBar1.setIndeterminate(false);
        NLabelMessageTool.errorMessage(msgLb, errCode, errMsg);
        setCompEnable(true);
        startBtn.setEnabled(true);
    }

}
