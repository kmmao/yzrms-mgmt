/*
 * ProjectMgmtTabPanel.java
 * 
 * Copyright(c) 2007-2016 by Yingzhi Tech
 * All Rights Reserved
 * 
 * Created at 2016-08-04 16:20:16
 */
package com.yz.rms.client.ui.project;

import com.nazca.sql.PageResult;
import com.nazca.ui.NTextHinter;
import com.nazca.ui.NWaitingPanel;
import com.nazca.ui.UIUtilities;
import com.nazca.ui.model.SimpleObjectListModel;
import com.nazca.ui.pagination.PaginationListener;
import com.nazca.ui.pagination.TablePageSession;
import com.nazca.ui.util.CardLayoutWrapper;
import com.yz.rms.client.agent.project.DeleteProjectAgent;
import com.yz.rms.client.agent.project.MarkProjectAgent;
import com.yz.rms.client.agent.project.QueryProjectAgent;
import com.yz.rms.client.ui.DeleteOperationPanel;
import com.yz.rms.client.ui.SimpleOperationPanel;
import com.yz.rms.client.listener.AgentListener;
import com.yz.rms.client.model.project.ProjectTableModel;
import com.yz.rms.client.renderer.TeamCmBoxListRenderer;
import com.yz.rms.client.util.ResourceUtil;
import com.yz.rms.common.enums.ProjectEnums;
import com.yz.rms.common.model.Project;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author 上官新建 <shangguanxinjian@yzhtech.com>
 */
public class ProjectMgmtTabPanel extends javax.swing.JPanel {

    private QueryProjectAgent queryProjectAgent = null;
    private DeleteProjectAgent deleteProjectAgent = null;
    private MarkProjectAgent markProjectAgent = null;
    private List<Project> list = null;
    private AgentListener<List<Project>> queryProjectAgentLis = null;
    private long timeSeq = 0;
    private CardLayoutWrapper contentLayout = null;
    private ProjectTableModel projectTableModel = new ProjectTableModel();
    private Project curProject;
    private SimpleObjectListModel<ProjectEnums> model = new SimpleObjectListModel<>();
    private TablePageSession pageSession;

    /**
     * Creates new form ProjectMgmtTabPanel
     */
    public ProjectMgmtTabPanel() {
	initComponents();
	initAgentAndListener();
	NTextHinter.attach("请输入项目名或甲方名称", searchTextField);
	UIUtilities.attachSearchIcon(searchTextField);
	onInit();
	initModel();
    }

    private void initAgentAndListener() {
	queryProjectAgent = new QueryProjectAgent();
	deleteProjectAgent = new DeleteProjectAgent();
	markProjectAgent = new MarkProjectAgent();
	queryProjectAgent.addListener(queryProjectAgentListener);
	contentLayout = new CardLayoutWrapper(cardPane);

	projectTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
	    @Override
	    public void valueChanged(ListSelectionEvent lse) {
		if (!lse.getValueIsAdjusting()) {
		    curProject = projectTableModel.getData(projectTable.getSelectedRow());
		    selectingProject();
		}
	    }
	});
	pagePane.addPaginationListener(new PaginationListener() {
	    @Override
	    public void onPageChanged(TablePageSession tps) {
		refreshBtn.doClick();
	    }
	});
    }

    private void initModel() {
	projectTable.setModel(projectTableModel);
	stateBox.setModel(model);
	List<ProjectEnums> list = new ArrayList<>();
	list.add(0, null);
	list.addAll(Arrays.asList(ProjectEnums.values()));
	model.setObjectList(list);
	stateBox.setRenderer(new TeamCmBoxListRenderer());
    }

    private void setButtonsEnabled(boolean flag) {
	createBtn.setEnabled(flag);
	deleteBtn.setEnabled(flag);
	refreshBtn.setEnabled(flag);
	updateBtn.setEnabled(flag);
	signBtn.setEnabled(flag);
	currentState.setEnabled(flag);
	stateBox.setEnabled(flag);
	searchTextField.setEnabled(flag);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jToolBar1 = new javax.swing.JToolBar();
        refreshBtn = new javax.swing.JButton();
        createBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        signBtn = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0));
        currentState = new javax.swing.JLabel();
        stateBox = new javax.swing.JComboBox<>();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        searchTextField = new javax.swing.JTextField();
        cardPane = new javax.swing.JPanel();
        contentPane = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        projectTable = new javax.swing.JTable();
        pagePane = new com.nazca.ui.pagination.PaginationPanel();
        waitPane = new com.nazca.ui.NWaitingPanel();
        noContentPanel = new javax.swing.JPanel();
        antialiasedLabel1 = new com.nazca.ui.AntialiasedLabel();

        jRadioButton1.setText("jRadioButton1");

        setLayout(new java.awt.BorderLayout());

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        refreshBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/yz/rms/client/res/refresh_16.png"))); // NOI18N
        refreshBtn.setText("刷新");
        refreshBtn.setFocusable(false);
        refreshBtn.setMargin(new java.awt.Insets(2, 5, 2, 5));
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(refreshBtn);

        createBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/yz/rms/client/res/add_16.png"))); // NOI18N
        createBtn.setText("添加");
        createBtn.setFocusable(false);
        createBtn.setMargin(new java.awt.Insets(2, 5, 2, 5));
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(createBtn);

        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/yz/rms/client/res/update-16.png"))); // NOI18N
        updateBtn.setText("修改");
        updateBtn.setFocusable(false);
        updateBtn.setMargin(new java.awt.Insets(2, 5, 2, 5));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(updateBtn);

        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/yz/rms/client/res/delete_16.png"))); // NOI18N
        deleteBtn.setText("删除");
        deleteBtn.setFocusable(false);
        deleteBtn.setMargin(new java.awt.Insets(2, 5, 2, 5));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(deleteBtn);

        signBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/yz/rms/client/res/16.png"))); // NOI18N
        signBtn.setText("标记");
        signBtn.setFocusable(false);
        signBtn.setMargin(new java.awt.Insets(2, 5, 2, 5));
        signBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(signBtn);
        jToolBar1.add(filler1);

        currentState.setText("当前状态: ");
        jToolBar1.add(currentState);

        stateBox.setMaximumSize(new java.awt.Dimension(79, 25));
        stateBox.setMinimumSize(new java.awt.Dimension(79, 25));
        stateBox.setPreferredSize(new java.awt.Dimension(79, 25));
        stateBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                stateBoxItemStateChanged(evt);
            }
        });
        jToolBar1.add(stateBox);
        jToolBar1.add(filler3);

        searchTextField.setMaximumSize(new java.awt.Dimension(230, 24));
        searchTextField.setMinimumSize(new java.awt.Dimension(230, 24));
        searchTextField.setPreferredSize(new java.awt.Dimension(230, 24));
        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });
        jToolBar1.add(searchTextField);

        add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        cardPane.setLayout(new java.awt.CardLayout());

        contentPane.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        projectTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        projectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "当前状态", "合同签订时间", "合同终止时间", "项目名称", "甲方", "金额"
            }
        ));
        jScrollPane1.setViewportView(projectTable);

        contentPane.add(jScrollPane1, java.awt.BorderLayout.CENTER);
        contentPane.add(pagePane, java.awt.BorderLayout.SOUTH);

        cardPane.add(contentPane, "CONTENT");
        cardPane.add(waitPane, "WAIT");

        noContentPanel.setLayout(new java.awt.BorderLayout());

        antialiasedLabel1.setBackground(new java.awt.Color(255, 0, 51));
        antialiasedLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(50, 50, 50, 50));
        antialiasedLabel1.setForeground(new java.awt.Color(153, 153, 153));
        antialiasedLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        antialiasedLabel1.setText("暂无项目信息");
        antialiasedLabel1.setFont(antialiasedLabel1.getFont().deriveFont(antialiasedLabel1.getFont().getStyle() | java.awt.Font.BOLD, antialiasedLabel1.getFont().getSize()+8));
        noContentPanel.add(antialiasedLabel1, java.awt.BorderLayout.CENTER);

        cardPane.add(noContentPanel, "EMPTY");

        add(cardPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
	AddOrUpdateProjectPanel addProjectPanel = new AddOrUpdateProjectPanel();
	addProjectPanel.setAddMode(true);
	Project ShowDisplay = addProjectPanel.ShowDisplay(this);
	if (ShowDisplay != null) {
	    refreshBtnActionPerformed(null);
	}
	updateBtn.setEnabled(true);
	deleteBtn.setEnabled(true);
	signBtn.setEnabled(true);
    }//GEN-LAST:event_createBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
	AddOrUpdateProjectPanel modifyProjectPanel = new AddOrUpdateProjectPanel();
	int index = projectTable.getSelectedRow();
	if (index >= 0) {
	    index = projectTable.convertRowIndexToModel(index);
	    curProject = projectTableModel.getData(index);
	    modifyProjectPanel.addData(curProject);
	}
	modifyProjectPanel.setAddMode(false);
	Project project = modifyProjectPanel.ShowDisplay(this);
	if (project != null) {
//	    refreshBtnActionPerformed(null);
	    projectTableModel.updateData(curProject);
	}

    }//GEN-LAST:event_updateBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
	pageSession = pagePane.getPageSession();
	queryProjectAgent.setParam(model.getSelectedItem(), searchTextField.getText().trim(), pageSession.getCurPageNum(), pageSession.getPageSize());
	queryProjectAgent.start();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed

	deleteProjectAgent.setParam(curProject.getProjectId());
	DeleteOperationPanel<String> deletePane = new DeleteOperationPanel<>(deleteProjectAgent);
	deletePane.configSingleDelete("项目", curProject.getProjectName());
	String project = deletePane.showMe(deleteBtn, ResourceUtil.buildImageIcon("32.png"), "删除项目信息", 400, 150);
	if (project != null) {
	    refreshBtn.doClick();
	}
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void signBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signBtnActionPerformed

	SimpleOperationPanel<Project> signPane = new SimpleOperationPanel<>(markProjectAgent);
	Project project = null;
	if (curProject.getState().toString().equals(ProjectEnums.underway.toString())) {
	    signPane.configDeteleMsg("<html>确认要执行标记当前状态为“已验收”的操作吗？</html>");
	    markProjectAgent.setPrama(curProject.getProjectId(), ProjectEnums.expired);
	    project = signPane.showMe(signBtn, ResourceUtil.buildImageIcon("32.png"), "标记进行中", 400, 100);
	    markProjectAgent.start();
	} else {
	    signPane.configDeteleMsg("<html>确认要执行标记当前状态为“进行中”的操作吗？</html>");
	    markProjectAgent.setPrama(curProject.getProjectId(), ProjectEnums.underway);
	    project = signPane.showMe(signBtn, ResourceUtil.buildImageIcon("32.png"), "标记已验收", 400, 100);
	    markProjectAgent.start();
	}
	if (project != null) {
	    projectTableModel.updateData(project);
	    selectingProject();
	}
    }//GEN-LAST:event_signBtnActionPerformed

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed
	pageSession = pagePane.getPageSession();
	queryProjectAgent.setParam(model.getSelectedItem(), searchTextField.getText().trim(), pageSession.getCurPageNum(), pageSession.getPageSize());
	refreshBtnActionPerformed(evt);
    }//GEN-LAST:event_searchTextFieldActionPerformed

    private void stateBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_stateBoxItemStateChanged
	pageSession = pagePane.getPageSession();
	queryProjectAgent.setParam(model.getSelectedItem(), searchTextField.getText().trim(), pageSession.getCurPageNum(), pageSession.getPageSize());
	queryProjectAgent.start();

    }//GEN-LAST:event_stateBoxItemStateChanged
//选中某一行数据

    private void selectingProject() {
	int index = projectTable.getSelectedRow();
	if (index >= 0) {
	    index = projectTable.convertRowIndexToModel(index);
	    curProject = projectTableModel.getData(index);
	    if (curProject != null && curProject.getState() != null) {
		if (curProject.getState().toString().equals("进行中")) {
		    signBtn.setText("标记为已验收");
		    setButtonsEnabled(true);
		} else {
		    signBtn.setText("标记为进行中");
		    setButtonsEnabled(true);
		}
	    }
	} else {
	    setButtonsEnabled(false);
	}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.nazca.ui.AntialiasedLabel antialiasedLabel1;
    private javax.swing.JPanel cardPane;
    private javax.swing.JPanel contentPane;
    private javax.swing.JButton createBtn;
    private javax.swing.JLabel currentState;
    private javax.swing.JButton deleteBtn;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel noContentPanel;
    private com.nazca.ui.pagination.PaginationPanel pagePane;
    private javax.swing.JTable projectTable;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JButton signBtn;
    private javax.swing.JComboBox<String> stateBox;
    private javax.swing.JButton updateBtn;
    private com.nazca.ui.NWaitingPanel waitPane;
    // End of variables declaration//GEN-END:variables
     private final AgentListener<PageResult<Project>> queryProjectAgentListener = new AgentListener<PageResult<Project>>() {
	@Override
	public void onStarted(long seq) {
	    timeSeq = seq;
	    setButtonsEnabled(false);
	    waitPane.setIndeterminate(true);
	    waitPane.showWaitingMode("数据加载中，请稍候...");
	    contentLayout.show(CardLayoutWrapper.WAIT);
	}

	@Override
	public void onSucceeded(PageResult<Project> result, long seq) {
	    waitPane.setIndeterminate(false);
	    if (timeSeq == seq) {
		setButtonsEnabled(true);
		projectTableModel.clear();
		if (result != null && result.getTotalCount() > 0) {
		    List<Project> projectList = result.getPageList();
		    int totalCount = result.getTotalCount();
		    int pageSize = result.getPageSize();
		    projectTableModel.setDatas(projectList);
		    contentLayout.show(CardLayoutWrapper.CONTENT);

		    projectTable.getSelectionModel().setSelectionInterval(0, 0);
		    pagePane.initPageButKeepSession(totalCount, pageSize);
		} else {
		    //搜索框输入无效字符可显示按钮
		    setButtonsEnabled(true);
		    //禁用相关按钮
		    updateBtn.setEnabled(false);
		    deleteBtn.setEnabled(false);
		    signBtn.setEnabled(false);
		    contentLayout.show(CardLayoutWrapper.EMPTY);
		}
	    }
	}

	@Override
	public void onFailed(String errMsg, int errCode, long seq) {
	    if (seq == timeSeq) {
		waitPane.setIndeterminate(false);
		waitPane.showMsgMode(errMsg, errCode, NWaitingPanel.MSG_MODE_INFO);
		contentLayout.show(CardLayoutWrapper.FAIL);
		setButtonsEnabled(true);
	    }
	}
    };

    public void onInit() {
	pageSession = pagePane.getPageSession();
	queryProjectAgent.setParam(model.getSelectedItem(), searchTextField.getText().trim(), pageSession.getCurPageNum(), pageSession.getPageSize());
	queryProjectAgent.start();
	projectTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }
}
