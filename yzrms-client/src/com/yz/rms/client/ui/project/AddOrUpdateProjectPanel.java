/*
 * AddOrUpdateTeamPanel1.java
 * 
 * Copyright(c) 2007-2016 by Yingzhi Tech
 * All Rights Reserved
 * 
 * Created at 2016-08-09 16:30:02
 */
package com.yz.rms.client.ui.project;

import com.nazca.ui.NComponentStyleTool;
import com.nazca.ui.NInternalDiag;
import com.nazca.ui.NInternalDiagListener;
import com.nazca.ui.model.SimpleObjectListModel;
import com.nazca.util.StringUtil;
import com.yz.rms.client.agent.project.CreateProjectAgent;
import com.yz.rms.client.agent.project.ModifyProjectAgent;
import com.yz.rms.client.agent.project.QueryProjectAgent;
import com.yz.rms.client.ui.OKCancelPanelListener;
import com.yz.rms.client.listener.AgentListener;
import com.yz.rms.client.util.ResourceUtil;
import com.yz.rms.common.consts.table.ProjectTableConsts;
import com.yz.rms.common.enums.ProjectEnums;
import com.yz.rms.common.model.Project;
import static java.lang.Integer.parseInt;
import javax.swing.JComponent;
import javax.swing.SwingUtilities;

/**
 *
 * @author 上官新建 <shangguanxinjian@yzhtech.com>
 */
public class AddOrUpdateProjectPanel extends javax.swing.JPanel {

    private boolean addMode;
    private Project project;
    private Project curProject;
    private CreateProjectAgent createProjectAgent;
    private ModifyProjectAgent modifyProjectAgent;
    private QueryProjectAgent queryProjectAgent;
    ProjectMgmtTabPanel projectMgmtTabPanel = null;
//    USMSUser curUser = ClientContext.getUser();

    /**
     * Creates new form AddOrUpdateTeamPanel1
     */
    public AddOrUpdateProjectPanel() {
	initComponents();
	initModel();
	initAgentAndListener();
    }

    public void addData(Project curProject) {
	this.curProject = curProject;
	projectTextField.setText(curProject.getProjectName());
	customerTextField.setText(curProject.getCustomer());
	amountTextField.setText(curProject.getAmount() + "");
	startTime.setSelectedDate(curProject.getStartTime());
	endTime.setSelectedDate(curProject.getEndTime());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        oKCancelPanel1 = new com.yz.rms.client.ui.OKCancelPanel();
        jPanel1 = new javax.swing.JPanel();
        projectNameLabel = new javax.swing.JLabel();
        projectTextField = new javax.swing.JTextField();
        customerLabel = new javax.swing.JLabel();
        customerTextField = new javax.swing.JTextField();
        amountTextField = new javax.swing.JTextField();
        amountLabel = new javax.swing.JLabel();
        stateLabel = new javax.swing.JLabel();
        startTimeLabel = new javax.swing.JLabel();
        endTimeLabel = new javax.swing.JLabel();
        startTime = new com.nazca.ui.JDatePicker();
        endTime = new com.nazca.ui.JDatePicker();
        stateComboBox = new javax.swing.JComboBox<>();

        setPreferredSize(new java.awt.Dimension(378, 275));

        projectNameLabel.setText("项目名称：");

        customerLabel.setText("项目甲方：");

        amountLabel.setText("项目金额：");

        stateLabel.setText("项目状态：");

        startTimeLabel.setText("开始时间：");

        endTimeLabel.setText("结束时间：");

        stateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "进行中", "已验收" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(projectNameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(customerLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(amountLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(stateLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(startTimeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(endTimeLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(projectTextField)
                    .addComponent(customerTextField)
                    .addComponent(amountTextField)
                    .addComponent(startTime, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(endTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stateComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectNameLabel)
                    .addComponent(projectTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerLabel)
                    .addComponent(customerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountLabel)
                    .addComponent(amountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateLabel)
                    .addComponent(stateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startTimeLabel)
                    .addComponent(startTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(endTimeLabel)
                    .addComponent(endTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(oKCancelPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(oKCancelPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amountLabel;
    private javax.swing.JTextField amountTextField;
    private javax.swing.JLabel customerLabel;
    private javax.swing.JTextField customerTextField;
    private com.nazca.ui.JDatePicker endTime;
    private javax.swing.JLabel endTimeLabel;
    private javax.swing.JPanel jPanel1;
    private com.yz.rms.client.ui.OKCancelPanel oKCancelPanel1;
    private javax.swing.JLabel projectNameLabel;
    private javax.swing.JTextField projectTextField;
    private com.nazca.ui.JDatePicker startTime;
    private javax.swing.JLabel startTimeLabel;
    private javax.swing.JComboBox<String> stateComboBox;
    private javax.swing.JLabel stateLabel;
    // End of variables declaration//GEN-END:variables

    public void setAddMode(boolean addMode) {
	this.addMode = addMode;
    }

    private void initAgentAndListener() {
	createProjectAgent = new CreateProjectAgent();
	modifyProjectAgent = new ModifyProjectAgent();
	createProjectAgent.addListener(addOrUpdateProjectAgentListener);
	modifyProjectAgent.addListener(addOrUpdateProjectAgentListener);
	oKCancelPanel1.addOKCancelListener(new OKCancelPanelListener() {
	    @Override
	    public void onOKClicked() {
		if (isFormValid()) {
		    if (addMode) {
			project = new Project();
			project.setProjectName(projectTextField.getText());
			project.setCustomer(customerTextField.getText());
			project.setAmount(Double.parseDouble(amountTextField.getText()));
			project.setState((ProjectEnums) stateComboBox.getSelectedItem());
			project.setStartTime(startTime.getSelectedDate());
			project.setEndTime(endTime.getSelectedDate());
			createProjectAgent.setParam(project);
			createProjectAgent.start();
		    } else {
			curProject.setProjectName(projectTextField.getText());
			curProject.setCustomer(customerTextField.getText());
			curProject.setAmount(Double.parseDouble(amountTextField.getText()));
			curProject.setStartTime(startTime.getSelectedDate());
			curProject.setEndTime(endTime.getSelectedDate());
			modifyProjectAgent.setParam(curProject);
			modifyProjectAgent.start();
		    }
		}
	    }

	    @Override
	    public void onCancelClicked() {
		NInternalDiag<Project, JComponent> diag = NInternalDiag.findNInternalDiag(AddOrUpdateProjectPanel.this);
		diag.hideDiag();
	    }
	});
    }

    private boolean isFormValid() {
	//项目名称验证
	if (StringUtil.isEmpty(projectTextField.getText().trim())) {
	    oKCancelPanel1.gotoErrorMode("项目名称不能为空!");
	    NComponentStyleTool.errorStyle(projectTextField);
	    return false;
	} else if (projectTextField.getText().length() > ProjectTableConsts.FIELD_PROJECT_NAME.getLength()) {
	    oKCancelPanel1.gotoErrorMode("项目名称长度超出范围!");
	    NComponentStyleTool.errorStyle(projectTextField);
	    return false;
	} else if (isEffect(projectTextField.getText()) == false) {
	    oKCancelPanel1.gotoErrorMode("项目名称不合法!");
	    NComponentStyleTool.errorStyle(projectTextField);
	    return false;
	} else {
	    NComponentStyleTool.normalStyle(projectTextField);
	}
	//甲方验证
	if (StringUtil.isEmpty(customerTextField.getText().trim())) {
	    oKCancelPanel1.gotoErrorMode("甲方名称不能为空!");
	    NComponentStyleTool.errorStyle(customerTextField);
	    return false;
	} else if (customerTextField.getText().length() > ProjectTableConsts.FIELD_CUSTOMER.getLength()) {
	    oKCancelPanel1.gotoErrorMode("甲方名称长度超出范围!");
	    NComponentStyleTool.errorStyle(customerTextField);
	    return false;
	} else if (isEffect(customerTextField.getText()) == false) {
	    oKCancelPanel1.gotoErrorMode("甲方名称不合法!");
	    NComponentStyleTool.errorStyle(customerTextField);
	    return false;
	} else {
	    NComponentStyleTool.normalStyle(customerTextField);
	}
	//金额验证
	if (StringUtil.isEmpty(amountTextField.getText().trim())) {
	    oKCancelPanel1.gotoErrorMode("金额不能为空!");
	    NComponentStyleTool.errorStyle(amountTextField);
	    return false;
	} else if (isEffectAmount(amountTextField.getText()) == false) {
	    oKCancelPanel1.gotoErrorMode("金额输入有误!");
	    NComponentStyleTool.errorStyle(amountTextField);
	    return false;
	} else if (amountTextField.getText().length() - 1 > ProjectTableConsts.FIELD_AMOUNT.getLength() || ((int) Double.parseDouble(amountTextField.getText()) + "").length() > 6) {
	    oKCancelPanel1.gotoErrorMode("金额长度超出范围!");
	    NComponentStyleTool.errorStyle(amountTextField);
	    return false;
	} else {
	    NComponentStyleTool.normalStyle(amountTextField);
	}
	//开始时间验证
	if (startTime.getSelectedDate().compareTo(endTime.getSelectedDate()) > 0) {
	    oKCancelPanel1.gotoErrorMode("开始时间不能大于结束时间!");
	    NComponentStyleTool.errorStyle(startTime);
	    return false;
	} else {
	    NComponentStyleTool.normalStyle(startTime);
	}
	return true;
    }

//    public static void main(String args[]) {
//	/* Set the Nimbus look and feel */
//	//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//	/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//	 */
//	try {
//	    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//		if ("Nimbus".equals(info.getName())) {
//		    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//		    break;
//		}
//	    }
//	} catch (ClassNotFoundException ex) {
//	    java.util.logging.Logger.getLogger(AddOrUpdateProjectPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//	} catch (InstantiationException ex) {
//	    java.util.logging.Logger.getLogger(AddOrUpdateProjectPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//	} catch (IllegalAccessException ex) {
//	    java.util.logging.Logger.getLogger(AddOrUpdateProjectPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//	} catch (javax.swing.UnsupportedLookAndFeelException ex) {
//	    java.util.logging.Logger.getLogger(AddOrUpdateProjectPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//	}
//	//</editor-fold>
//	//</editor-fold>
//
//	/* Create and display the form */
//	java.awt.EventQueue.invokeLater(new Runnable() {
//	    public void run() {
//		new AddOrUpdateProjectPanel().setVisible(true);
//	    }
//	});
//    }
    public Project ShowDisplay(JComponent aThis) {
	NInternalDiag<Project, JComponent> diag = null;
	if (addMode == true) {
	    diag = new NInternalDiag<>("添加项目", ResourceUtil.buildImageIcon("32.png"), this);
	} else {
	    diag = new NInternalDiag<>("修改项目", ResourceUtil.buildImageIcon("32.png"), this);
	    this.stateLabel.setVisible(false);
	    this.stateComboBox.setVisible(false);
	}
	diag.addNInternalDiagListener(new NInternalDiagListener() {

	    @Override
	    public void onClosing(NInternalDiag nid) {
	    }

	    @Override
	    public void onClosed(NInternalDiag nid) {
	    }

	    @Override
	    public void onShowingDone(NInternalDiag nid) {
	    }
	});
	return diag.showInternalDiag(aThis, NInternalDiag.INIT_SIZE_MODE_PREFERED);

    }

    AgentListener<Project> addOrUpdateProjectAgentListener = new AgentListener<Project>() {
	@Override
	public void onStarted(long seq) {
	    setUpdateOrAddEnable(false);
	    if (addMode) {
		oKCancelPanel1.gotoWaitMode("正在添加...");
	    } else {
		oKCancelPanel1.gotoWaitMode("正在修改...");
	    }
	}

	@Override
	public void onSucceeded(Project result, long seq) {
	    if (addMode) {
		oKCancelPanel1.gotoSuccessMode("添加成功");
	    } else {
		oKCancelPanel1.gotoSuccessMode("修改成功");
	    }
	    SwingUtilities.invokeLater(new Runnable() {
		public void run() {
		    NInternalDiag<Project, JComponent> diag = NInternalDiag.findNInternalDiag(jPanel1);
		    diag.hideDiag(result);
		}
	    });
	}

	@Override
	public void onFailed(String errMsg, int errCode, long seq) {
	    //启用界面
	    setUpdateOrAddEnable(true);
	    oKCancelPanel1.gotoErrorMode(errMsg, errCode);
	}
    };

    private void setUpdateOrAddEnable(boolean flag) {
	//禁用界面
	projectTextField.setEnabled(flag);
	customerTextField.setEnabled(flag);
	amountTextField.setEnabled(flag);
	stateComboBox.setEnabled(flag);
	startTime.setEnabled(flag);
	endTime.setEnabled(flag);
    }

    private void initModel() {
	SimpleObjectListModel<ProjectEnums> model = new SimpleObjectListModel<>();
	model.add(ProjectEnums.underway);
	model.add(ProjectEnums.expired);
	stateComboBox.setModel(model);
	stateComboBox.setSelectedIndex(0);

    }

    private boolean isEffect(String text) {
	//长度为1-64的所有字符
	String reg = "^.{1,64}$";
	if (!text.matches(reg)) {
	    return false;
	}
	return true;
    }

    private boolean isEffectAmount(String text) {
	//钱的正则表达式
	String reg2 = "^([1-9]([0-9]+)?(.[0-9]{1,2})?$)|(^(0){1}$)|(^[0-9].[0-9]([0-9])?$)";
	return text.matches(reg2);
    }
}
